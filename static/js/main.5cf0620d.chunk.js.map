{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","api/api.js","index.js"],"names":["TodoList","state","substringForFilter","status","todos","checked","this","props","selectUser","className","type","placeholder","value","onChange","event","setState","target","filter","todo","title","includes","completed","map","key","id","readOnly","onClick","userId","React","Component","CurrentUser","userInfo","getUserInfo","fetch","then","response","json","userInfoFromServer","data","name","email","phone","clearSelectedUser","App","selectedUserId","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf0620d.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component{\n  state = {\n    substringForFilter: '',\n    status: 'all',\n    todos: [],\n    checked: {},\n  }\n\n  render() {\n    const { selectUser,todos } = this.props;\n    const { substringForFilter } = this.state;\n\n    return(\n      <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type='text'\n        placeholder='title'\n        value={substringForFilter}\n        onChange={(event) => {\n          this.setState({\n            substringForFilter: event.target.value,\n          })\n        }}\n      />\n\n      <select\n        value={this.state.status}\n        onChange={(event)=>{\n          this.setState({status: event.target.value,})\n        }}\n      >\n        <option value='all'>All</option>\n        <option value='active'>Active</option>\n        <option value='completed'>Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos\n            .filter(todo => todo.title && todo.title.includes(substringForFilter))\n            .filter(todo => this.state.status === 'all'\n              ? (todo.completed === true || todo.completed === false)\n              : this.state.status === 'active'\n              ? todo.completed === false\n              : this.state.status === 'completed'\n              ? todo.completed === true\n              : null)\n            .map(todo => (\n          <li\n            className={`TodoList__item ${todo.completed ? 'TodoList__item--checked' : 'TodoList__item--unchecked'}`}\n            key={todo.id}\n          >{`${todo.completed}`}\n            <label>\n              <input type=\"checkbox\"\n              readOnly\n              checked={\n                todo.completed ? true : false\n              }\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={()=>{selectUser(todo.userId)}}\n            >\n              User&nbsp;#{todo.userId}\n            </button>\n          </li>\n          ))}\n\n        </ul>\n      </div>\n    </div>\n    )\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  )\n}\n\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types'\n\nexport class CurrentUser extends React.Component{\n  state = {\n    userInfo: {\n      \"id\": 0,\n      \"name\":\"\",\n      \"username\":\"\",\n      \"email\":\"\",\n      \"phone\":\"\",\n      \"website\":\"\",\n      \"createdAt\":\"\",\n      \"updatedAt\":\"\",\n    },\n  }\n\n  getUserInfo = () => {\n    return fetch(`https://mate-api.herokuapp.com/users/${this.props.userId}`)\n      .then(response => response.json());\n  }\n\n  componentDidMount() {\n    this.getUserInfo().then(userInfoFromServer => {\n      this.setState({\n        userInfo: userInfoFromServer.data,\n      })\n\n    })\n  }\n\n  componentDidUpdate() {\n    this.props.userId !== this.state.userInfo.id\n      && this.getUserInfo().then(userInfoFromServer => {\n      this.setState({\n        userInfo: userInfoFromServer.data,\n      })\n    })\n  }\n\n  render() {\n    const {id, name, email,phone} = this.state.userInfo;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>Selected user: {id}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        onClick ={this.props.clearSelectedUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todosFromServer => {\n      this.setState({\n        todos: todosFromServer.data,\n      })\n\n    })\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    })\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    })\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearSelectedUser={this.clearSelectedUser}/>\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function getTodos() {\n  return fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json());\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}