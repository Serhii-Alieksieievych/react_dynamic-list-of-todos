{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","status","todos","props","checked","todo","title","includes","this","completed","selectUser","className","type","placeholder","value","onChange","event","setState","target","filter","searchByTitle","filterByStatus","map","cn","key","id","readOnly","onClick","userId","React","Component","getUserInfo","fetch","then","response","json","catch","CurrentUser","userInfo","userInfoFromServer","data","name","email","phone","clearSelectedUser","App","selectedUserId","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9468edf4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport class TodoList extends React.Component{\n  state = {\n    query: '',\n    status: 'all',\n    todos: [...this.props.todos],\n    checked: {},\n  }\n\n  searchByTitle(todo) {\n    return todo.title && todo.title.includes(this.state.query)\n  }\n\n  filterByStatus(todo) {\n    return this.state.status === 'all'\n      ? (todo.completed === true || todo.completed === false)\n      : this.state.status === 'active'\n      ? todo.completed === false\n      : this.state.status === 'completed'\n      ? todo.completed === true\n      : null\n  }\n\n  render() {\n    const { selectUser, todos } = this.props;\n    const { query } = this.state;\n\n    return(\n      <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type='text'\n        placeholder='title'\n        value={query}\n        onChange={(event) => {\n          this.setState({\n            query: event.target.value,\n          })\n        }}\n      />\n\n      <select\n        value={this.state.status}\n        onChange={(event)=>{\n          this.setState({status: event.target.value,})\n        }}\n      >\n        <option value='all'>All</option>\n        <option value='active'>Active</option>\n        <option value='completed'>Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos\n            .filter(todo => this.searchByTitle(todo))\n            .filter(todo => this.filterByStatus(todo))\n            .map(todo => (\n          <li\n            className={`TodoList__item ${cn('TodoList__item--checked',{'TodoList__item--unchecked':todo.completed})}`}\n            key={todo.id}\n          >\n            <label>\n              <input type=\"checkbox\"\n              readOnly\n              checked={\n                todo.completed ? true : false\n              }\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={()=>{selectUser(todo.userId)}}\n            >\n              User&nbsp;#{todo.userId}\n            </button>\n          </li>\n          ))}\n\n        </ul>\n      </div>\n    </div>\n    )\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  )\n}\n\n","export function getTodos() {\n  return fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json());\n}\n\nexport function getUserInfo(id) {\n  return fetch(`https://mate-api.herokuapp.com/users/${id}`)\n    .then(response => response.json())\n    .catch();\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types'\nimport { getUserInfo } from '../../api/api';\n\nexport class CurrentUser extends React.Component{\n  state = {\n    userInfo: {\n      \"id\": 0,\n      \"name\":\"\",\n      \"username\":\"\",\n      \"email\":\"\",\n      \"phone\":\"\",\n      \"website\":\"\",\n      \"createdAt\":\"\",\n      \"updatedAt\":\"\",\n    },\n  }\n\n  componentDidMount() {\n    getUserInfo(this.props.userId).then(userInfoFromServer => {\n      this.setState({\n        userInfo: userInfoFromServer.data,\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.state.userInfo) {\n      (this.props.userId !== this.state.userInfo.id)\n      && getUserInfo(this.props.userId)\n        .then(userInfoFromServer => {\n          this.setState({\n            userInfo: userInfoFromServer.data,\n          })\n        })\n    } else {\n      getUserInfo(this.props.userId).then(userInfoFromServer => {\n        this.setState({\n          userInfo: userInfoFromServer.data,\n        })\n      })\n    }\n  }\n\n  render() {\n    if (!this.state.userInfo) {\n      return(\n        <div>No info about user</div>\n      )\n    }\n    const {id, name, email,phone} = this.state.userInfo;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        onClick ={this.props.clearSelectedUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todosFromServer => {\n      this.setState({\n        todos: todosFromServer.data,\n      })\n\n    })\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    })\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    })\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clearSelectedUser={this.clearSelectedUser}/>\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}